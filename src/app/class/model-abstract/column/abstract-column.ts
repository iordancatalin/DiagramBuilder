import {Subject} from 'rxjs/index';import {HtmlColumn} from '../../model/html/column/html-column';import {ValidationUtil} from '../../ui/validation-util';import {AbstractComponent} from '../abstract-component';/** * Abstract column class */export abstract class AbstractColumn extends AbstractComponent {  protected _defaultValue: string = null;  protected _primaryKey = false;  protected _foreignKey = false;  protected _nullable = false;  protected _autoincrement = false;  protected _unique = false;  protected _comment: string = null;  protected _actionSubject$: Subject<any> = new Subject();  public constructor(id: string) {    super(id);  }  public equals(other: any): boolean {    if (ValidationUtil.isNullOrUndefined(other)) {      return false;    }    return this.id === other.id;  }  get defaultValue(): string {    return this._defaultValue;  }  set defaultValue(value: string) {    this._defaultValue = value;    this.emit();  }  protected emitActionSubject(): void {    this._actionSubject$.next(this);  }  get primaryKey(): boolean {    return this._primaryKey;  }  set primaryKey(value: boolean) {    this._primaryKey = value;    this.emitActionSubject();  }  get foreignKey(): boolean {    return this._foreignKey;  }  set foreignKey(value: boolean) {    this._foreignKey = value;    this.emitActionSubject();  }  get nullable(): boolean {    return this._nullable;  }  set nullable(value: boolean) {    this._nullable = value;    this.emitActionSubject();  }  get autoincrement(): boolean {    return this._autoincrement;  }  set autoincrement(value: boolean) {    this._autoincrement = value;    this.emitActionSubject();  }  get unique(): boolean {    return this._unique;  }  set unique(value: boolean) {    this._unique = value;    this.emitActionSubject();  }  get comment(): string {    return this._comment;  }  set comment(value: string) {    this._comment = value;    this.emit();  }  set defaultValueWithoutEmit(value: string) {    this._defaultValue = value;  }  set primaryKeyWithoutEmit(value: boolean) {    this._primaryKey = value;  }  set foreignKeyWithoutEmit(value: boolean) {    this._foreignKey = value;  }  set nullableWithoutEmit(value: boolean) {    this._nullable = value;  }  set autoincrementWithoutEmit(value: boolean) {    this._autoincrement = value;  }  set uniqueWithoutEmit(value: boolean) {    this._unique = value;  }  set commentWithoutEmit(value: string) {    this._comment = value;  }}